package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*TaskOutput task output

swagger:model TaskOutput
*/
type TaskOutput struct {

	/* data
	 */
	Data []string `json:"data,omitempty"`

	/* status
	 */
	Status *int32 `json:"status,omitempty"`
}

// Validate validates this task output
func (m *TaskOutput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateData(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TaskOutput) validateData(formats strfmt.Registry) error {

	if swag.IsZero(m.Data) { // not required
		return nil
	}

	for i := 0; i < len(m.Data); i++ {

		if err := validate.RequiredString("data"+"."+strconv.Itoa(i), "body", string(m.Data[i])); err != nil {
			return err
		}

	}

	return nil
}
