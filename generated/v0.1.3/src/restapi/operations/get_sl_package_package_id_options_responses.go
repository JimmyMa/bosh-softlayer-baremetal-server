package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"models"
)

/*GetSlPackagePackageIDOptionsOK Successful response

swagger:response getSlPackagePackageIdOptionsOK
*/
type GetSlPackagePackageIDOptionsOK struct {

	// In: body
	Payload *models.PackageOptions `json:"body,omitempty"`
}

// NewGetSlPackagePackageIDOptionsOK creates GetSlPackagePackageIDOptionsOK with default headers values
func NewGetSlPackagePackageIDOptionsOK() *GetSlPackagePackageIDOptionsOK {
	return &GetSlPackagePackageIDOptionsOK{}
}

// WithPayload adds the payload to the get sl package package id options o k response
func (o *GetSlPackagePackageIDOptionsOK) WithPayload(payload *models.PackageOptions) *GetSlPackagePackageIDOptionsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sl package package id options o k response
func (o *GetSlPackagePackageIDOptionsOK) SetPayload(payload *models.PackageOptions) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSlPackagePackageIDOptionsOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetSlPackagePackageIDOptionsDefault Unexpected error

swagger:response getSlPackagePackageIdOptionsDefault
*/
type GetSlPackagePackageIDOptionsDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSlPackagePackageIDOptionsDefault creates GetSlPackagePackageIDOptionsDefault with default headers values
func NewGetSlPackagePackageIDOptionsDefault(code int) *GetSlPackagePackageIDOptionsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSlPackagePackageIDOptionsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get sl package package ID options default response
func (o *GetSlPackagePackageIDOptionsDefault) WithStatusCode(code int) *GetSlPackagePackageIDOptionsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get sl package package ID options default response
func (o *GetSlPackagePackageIDOptionsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get sl package package ID options default response
func (o *GetSlPackagePackageIDOptionsDefault) WithPayload(payload *models.Error) *GetSlPackagePackageIDOptionsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sl package package ID options default response
func (o *GetSlPackagePackageIDOptionsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSlPackagePackageIDOptionsDefault) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
