package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"models"
)

/*GetSlPackagesOK Successful response

swagger:response getSlPackagesOK
*/
type GetSlPackagesOK struct {

	// In: body
	Payload *models.Packages `json:"body,omitempty"`
}

// NewGetSlPackagesOK creates GetSlPackagesOK with default headers values
func NewGetSlPackagesOK() *GetSlPackagesOK {
	return &GetSlPackagesOK{}
}

// WithPayload adds the payload to the get sl packages o k response
func (o *GetSlPackagesOK) WithPayload(payload *models.Packages) *GetSlPackagesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sl packages o k response
func (o *GetSlPackagesOK) SetPayload(payload *models.Packages) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSlPackagesOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetSlPackagesDefault Unexpected error

swagger:response getSlPackagesDefault
*/
type GetSlPackagesDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSlPackagesDefault creates GetSlPackagesDefault with default headers values
func NewGetSlPackagesDefault(code int) *GetSlPackagesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSlPackagesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get sl packages default response
func (o *GetSlPackagesDefault) WithStatusCode(code int) *GetSlPackagesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get sl packages default response
func (o *GetSlPackagesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get sl packages default response
func (o *GetSlPackagesDefault) WithPayload(payload *models.Error) *GetSlPackagesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sl packages default response
func (o *GetSlPackagesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSlPackagesDefault) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
